spring.application.name=proposta-service

# Server configs
server.port: 8081

# Banco de dados
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:desafio-ecommerce
spring.datasource.username=sa
spring.datasource.password=

# Jpa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

# Feign
feign.client.analise-financeira.url=${ANALISE_FINANCEIRA_URL:http://localhost:9999/api}
feign.client.contas.url=${CONTAS_URL:http://localhost:8888/api}

# Actuator
management.endpoints.web.exposure.include= info, health, metrics, prometheus

# Keycloak
keycloak.auth-server-url=${KEYCLOAK_AUTH_SERVER_URL:http://localhost:18080/auth}
keycloak.realm=Proposta
keycloak.resource=proposta-service
keycloak.credentials.secret=4ea5adc3-5989-4407-be11-e3c17004256d
keycloak.public-client=true
keycloak.use-resource-role-mappings=true
keycloak.bearer-only=true

keycloak.security-constraints[0].authRoles[0]=user
keycloak.security-constraints[0].securityCollections[0].patterns[0]=/propostas/*
keycloak.security-constraints[0].securityCollections[0].patterns[1]=/cartoes/*

 Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

opentracing.spring.cloud.feign.enabled=false